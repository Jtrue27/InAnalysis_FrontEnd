<!DOCTYPE HTML>
<html id="top">
	<head>
    <title>Popworld</title>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

		<% include include/css %>

    <style>

      .main-body{
        width: 100%;
        height: 100vh;

      }

      .step1{
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 2em;
      }

      .step2{
        width: 100%;
        height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }

      .msg-head{
        width: 100%;
        flex: 0 0 100px;
        padding: 10px 1em;
      }

      .msg-div{
        width: 100%;
        flex: 1 1 100px;
        background-color: #efefef;
        position: relative;
        padding: 1em;
      }

      .msg-contents{
        width: 100%;
        height: 100%;
        padding: .5em;
        background-color: #fff8e9;
        border-radius: .5em;
        overflow-y: scroll;
      }

      .msg-footer{
        flex: 0 0;
      }

    </style>
  </head>
	<body>
		<div id="app">

      <section class="main-body">

        <div v-if="step == 1" class="step1">
          <div style="width: 100%;">
            <button class="btn btn-success btn-lg btn-block" @click="createTeam">
              <i class="fas fa-users"></i><br/>
              建立隊伍
            </button>
          </div>


          <div class="my-4" style="width: 100%;">
            <button class="btn btn-primary btn-lg btn-block" @click="joinTeam">
              <i class="fas fa-user-plus"></i><br/>
              加入隊伍
            </button>
            <input type="text" class="form-control mt-2" v-model="teamId" placeholder="team ID">
          </div>

        </div>

        <div v-show="step == 2" class="step2">

          <div class="msg-head">
            <h3>Team ID：{{teamId}}</h3>
            <div>
              <button v-for="(item, index) in userInTeam" class="btn btn-info mr-2" v-text="item.name"></button>
            </div>
          </div>

          <div class="msg-div">
            <div class="msg-contents">
              <div v-for="(item, index) in msgs">
                <span v-text="item.msg"></span>
              </div>
            </div>
          </div>

          <div class="msg-footer">
            <div class="input-group input-group-lg">
              <div class="input-group-prepend">
                <span class="input-group-text" v-text="name"></span>
              </div>
              <input type="text" class="form-control" v-model="textMsg">
              <div class="input-group-append">
                <button class="btn btn-outline-success" type="button" @click="send" :disabled="textMsg.length == 0">send</button>
              </div>
            </div>
          </div>


        </div>

      </section>

      <div>




      </div>

		</div>
	</body>
</html>
<% include include/scripts %>
<script src="/assets/js/socket.io.js"></script>
<script>
  var app = null;

  function randomName(){
    var names = [
      'Austin',
      'Susy',
      'Aributa',
      'Test',
      'Haha',
      'Helen',
    ];
    return names[parseInt(Math.random() * names.length)];
  }

  function getRandomTeamID(){
    var t = '';
    for(var i=0;i<10;i++){
      var r2 = 0;
      var r = parseInt(Math.random() * 62);
      if(r<10){
        r2 = r+48;
      }else if( r >=10 && r<36){
        r2 = r+55;
      }else{
        r2 = r+61;
      }
      t += String.fromCharCode(r2);
    }
    return t;
  }

  function initApp(){
    app = new Vue({
      el: '#app',
      data: {
        step: 1,
        name: 'Austin',
        teamId: '',
        textMsg: '',
        socket: null,
        msgs: [],
        userInTeam: [],
      },
      mounted: function(){
        this.buildConnection();
      },
      watch: {

      },
      updated: function(){

      },
      computed: {

      },
      methods: {
        createTeam: function(){
          //呼叫API跟DB聯絡，並取得隊伍的UNIQUE ID
          this.teamId = getRandomTeamID();
          this.joinTeam();
        },
        joinTeam: function(){
          //透過API檢查隊伍的UNIQUE ID是否存在(不存在則跳出錯誤不往下)
          this.socket.emit('joinTeam', { id: this.teamId });
          this.step = 2;
        },
        buildConnection: function(){
          this.name = randomName();
          this.socket = io.connect('/team');

          const _this = this;
          _this.socket.emit('setName', { name: this.name });

          _this.socket.on('receiveMsg', function (data) {
            _this.msgs.push(data);
          });

          _this.socket.on('memberList', function (data) {
            console.log(data);
            for( var u in data.list){
              _this.userInTeam.push(data.list[u]);
            }
          });

          _this.socket.on('memberJoined', function(data) {
            _this.userInTeam.push(data);
          });

          _this.socket.on('memberLeft', function(data){
            for(var k=_this.userInTeam.length-1;k>=0;k--){
              if(_this.userInTeam[k].id == data.id){
                _this.userInTeam.splice(k, 1);
              }
            }
          });
        },
        send: function(){
          try{
            this.socket.emit('sendMsg', {teamId: this.teamId, msg:this.textMsg});
            this.textMsg = '';
          }catch(err){

          }
        },
      }
    });
  }



  $(document).ready(function(){
		initApp();

  });
</script>
