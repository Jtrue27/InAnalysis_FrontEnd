{
  "_from": "express-file-store",
  "_id": "express-file-store@1.0.3",
  "_inBundle": false,
  "_integrity": "sha1-sVJe4Gguzi5HQEapz+WdLzUXeT8=",
  "_location": "/express-file-store",
  "_phantomChildren": {
    "bson": "1.0.9",
    "buffer-shims": "1.0.0",
    "core-util-is": "1.0.2",
    "es6-promise": "3.2.1",
    "inherits": "2.0.3",
    "isarray": "1.0.0",
    "require_optional": "1.0.1",
    "safe-buffer": "5.1.2",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "escapedName": "express-file-store",
    "fetchSpec": "latest",
    "name": "express-file-store",
    "raw": "express-file-store",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/express-file-store/-/express-file-store-1.0.3.tgz",
  "_shasum": "b1525ee0682ece2e474046a9cfe59d2f3517793f",
  "_shrinkwrap": null,
  "_spec": "express-file-store",
  "_where": "/home/zxaustin/popworld-tools",
  "author": {
    "email": "rusintez@gmail.com",
    "name": "Vladimir Popov"
  },
  "bin": {
    "efs": "bin/efs"
  },
  "bugs": {
    "url": "https://github.com/seedalpha/express-file-store/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "aws-sdk": "^2.2.10",
    "busboy": "^0.2.11",
    "debug": "^2.1.3",
    "express": "^4.12.3",
    "mime": "^1.3.4",
    "minimist": "^1.1.1",
    "mkdirp": "^0.5.0",
    "mongodb": "^2.0.46",
    "s3-readable": "^1.0.1",
    "s3-writeable": "^1.0.1"
  },
  "deprecated": false,
  "description": "express middleware to access/write/remove files (using file path) with various backends",
  "devDependencies": {
    "mocha": "^2.2.1",
    "rimraf": "^2.3.2",
    "supertest": "^0.15.0"
  },
  "homepage": "https://github.com/seedalpha/express-file-store",
  "keywords": [
    "api",
    "download",
    "express",
    "file",
    "gridfs",
    "middleware",
    "s3",
    "upload"
  ],
  "license": "MIT",
  "main": "lib/express-file-store/index.js",
  "name": "express-file-store",
  "optionalDependencies": {},
  "readme": "# express-file-store\n\nexpress middleware to access/write/remove files (using file path) with various backends.\n\n[![NPM Package](https://img.shields.io/npm/v/express-file-store.svg?style=flat)](https://www.npmjs.org/package/express-file-store)\n[![Build Status](https://travis-ci.org/seedalpha/express-file-store.svg?branch=master)](https://travis-ci.org/seedalpha/express-file-store/branches)\n[![Dependencies](https://david-dm.org/seedalpha/express-file-store.svg)](https://david-dm.org/seedalpha/express-file-store)\n\n### Usage (middleware)\n\n    $ npm install express-file-store --save\n\n```javascript\n\nvar express = require('express');\nvar FileStore = require('express-file-store');\n\n// using file system\nvar fileStore = FileStore('fs', {\n  path: __dirname + '/public/uploads'\n});\n\n// or using gridfs\nvar fileStore = FileStore('gridfs', {\n  url: 'mongodb://localhost:27017/test'\n});\n\n// or using s3\nvar fileStore = FileStore('s3', {\n  key: process.env.AMAZON_ACCESS_KEY_ID,\n  secret: process.env.AMAZON_ACCESS_KEY_SECRET,\n  bucket: 'test',\n  region: 'ap-southeast-1'\n});\n\n// in express\nvar app = express();\n\n// POST /a/b/c.png to upload\n// GET /a/b/c.png to download\n// DELETE /a/b/c.png to remove\napp.use(filestore.routes);\n\n// or directly\n\nfileStore.get('/a/b/c.png', function(err, file) {\n  console.log(err, file); // null, { filename: '/a/b/c.png', contentType: 'image/png', length: 512, stream: [Readable] }\n});\n\nfileStore.put({\n  filename: '/a/b/c/d.pdf',\n  contentType: 'application/pdf',\n  stream: fs.createReadStream('/d.pdf')\n}, function(err) {\n  console.log(err); // undefined\n});\n\nfileStore.remove('../../../../../usr', function(err, file) {\n  console.log(err.message); // 'File not found'\n});\n\n// ...\n```\n\n### Usage (standalone)\n\n    $ npm install -g express-file-store\n    $ efs gridfs -p 8080 -u mongodb://localhost:27017/test # start a server with gridfs backend\n    $ efs fs -p 8080 -p $(pwd) # start a server with fs backend\n    $ efs fs # will start file server on port 8080 in current pwd\n    $ efs s3 -p 8080 -k $AMAZON_ACCESS_KEY_ID -s $AMAZON_ACCESS_KEY_SECRET -b $S3_BUCKET -r $S3_REGION # start a server with S3 backend\n    $ curl -F file=@README.md http://localhost:8080/README.md\n    $ curl --data-binary @package.json -H \"Content-Type: application/json\" http://localhost:8080/package.json\n\n### Development\n\n    $ git clone git@github.com:seedalpha/express-file-store.git\n    $ cd express-file-store\n    $ npm install\n    $ npm test # make sure you have mongodb and s3 credentials in place\n\n### Author\n\nVladimir Popov <rusintez@gmail.com>\n\n### License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/seedalpha/express-file-store.git"
  },
  "scripts": {
    "test": "mocha -R spec -b -t 30000 test"
  },
  "version": "1.0.3"
}
